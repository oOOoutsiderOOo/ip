@import url("https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;700&display=swap");

/***
    The new CSS reset - version 1.7.2 (last updated 23.6.2022)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
*:where(:not(html, iframe, canvas, img, svg, video):not(svg *, symbol *)) {
    all: unset;
    display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
    cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
    list-style: none;
}

/* For images to not be able to exceed their container */
img {
    max-width: 100%;
}

/* removes spacing between cells in tables */
table {
    border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
    -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
    white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
    -webkit-appearance: revert;
    appearance: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
    color: unset;
}

/* fix the feature of 'hidden' attribute.
 display:revert; revert to element instead of attribute */
:where([hidden]) {
    display: none;
}

/* revert for bug in Chromium browsers
 - fix for the content editable attribute will work properly.
 - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable="false"])) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
    -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
    -webkit-user-drag: element;
}

:root {
    --clr-gray-xdrk: hsl(0, 0%, 17%);
    --clr-gray-drk: hsl(0, 0%, 59%);
}
body {
    font-family: "Rubik", sans-serif;
    font-size: 18px;
    color: rgb(0, 0, 0);
}

h1 {
    color: white;
    font-size: 24px;
    font-weight: 500;
}

h2 {
    font-weight: 500;
}
h3 {
    font-size: 10px;
    font-weight: 700;
    letter-spacing: 0.1em;
    color: var(--clr-gray-drk);
}

.background-map {
    height: 100vh;
    display: flex;
    flex-direction: column;
}

.background {
    background: url("/pattern-bg.png");
    background-repeat: no-repeat;
    background-size: cover;
    height: 30vh;
    width: 100%;
}

.map-container {
    height: 70vh;
    width: 100%;
    z-index: 0;
}

.app-container {
    position: absolute;
    top: 0px;
    display: flex;
    flex-direction: column;
    width: 90%;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
    justify-content: center;
    align-items: center;
    gap: 2rem;
}
header {
    margin-top: 2rem;
}

form {
    background-color: white;
    height: 3em;
    border-radius: 0.75rem;
    display: flex;
    padding-left: 1.5em;
    overflow: hidden;
    filter: drop-shadow(0px 0px 50px rgba(0, 0, 0, 0.336));
}
input[type="text"] {
    width: 95%;
}

::placeholder {
    color: var(--clr-gray-drk);
}
input[type="button"] {
    background: url(/icon-arrow.svg), black;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    width: 3rem;
    cursor: pointer;
}

input[type="button"]:hover {
    background: url(/icon-arrow.svg), var(--clr-gray-xdrk);
    background-repeat: no-repeat;
    background-position: 50% 50%;
}

.data-container {
    background-color: white;
    border-radius: 0.75rem;
    margin-top: 1.5rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    filter: drop-shadow(0px 0px 50px rgba(0, 0, 0, 0.336));
    padding: 1rem;
}

.data {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 1rem;
    gap: 0.25rem;
}

@media screen and (min-width: 768px) {
    form {
        max-width: 50%;
        margin-left: auto;
        margin-right: auto;
        justify-content: space-between;
    }
    .data-container {
        margin-top: 4rem;
        flex-direction: row;
        padding: 1rem;
        width: 80vw;
        justify-content: space-between;
    }

    .data {
        height: 5rem;
        align-items: flex-start;
        border-right: 1px solid rgb(226, 226, 226);
        width: 100%;
        margin-left: 0;
        margin-right: 0;
        padding: 0rem 2rem;
    }

    .isp {
        border-right: none;
    }
}
